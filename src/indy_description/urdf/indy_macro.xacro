<?xml version="1.0"?>
<robot xmlns:xacro="http://wiki.ros.org/xacro">

    <!-- <xacro:include filename="$(find indy_description)/urdf/indy.ros2_control.xacro" /> -->
    <xacro:include filename="$(find indy_description)/urdf/indy_transmissions.xacro"/>
    <xacro:include filename="$(find indy_description)/urdf/indy_common.xacro"/>
    <xacro:include filename="$(find indy_description)/urdf/materials.xacro"/>

    <xacro:macro name="indy_robot" params="
        prefix
        name
        indy_type
        indy_eye
        parent
        joint_limits_parameters_file
        kinematics_parameters_file
        physical_parameters_file
        visual_parameters_file
        transmission_hw_interface:=hardware_interface/PositionJointInterface
        *origin">
        <!-- Load configuration data from the provided .yaml files -->
        <xacro:define_initialize visual_parameters_file="${visual_parameters_file}"/>

        <!-- <xacro:property name="indy_material" value="metal_white"/> -->
        <xacro:if value="${ indy_type == 'indy7' or indy_type == 'indy7_v2' or indy_type == 'indyrp2' or 
                            indy_type == 'indyrp2_v2' or indy_type == 'indy12' or indy_type == 'indy12_v2' or 
                            indy_type == 'nuri3s' or indy_type == 'nuri4s' or indy_type == 'nuri7c' or indy_type == 'nuri20c' or indy_type == 'opti5'}">
            <xacro:property name="material_0" value="indy_white"/>
            <xacro:property name="material_1" value="indy_white"/>
            <xacro:property name="material_2" value="indy_white"/>
            <xacro:property name="material_3" value="indy_white"/>
            <xacro:property name="material_4" value="indy_white"/>
            <xacro:property name="material_5" value="indy_white"/>
            <xacro:property name="material_6" value="indy_white"/>
            <xacro:property name="material_7" value="indy_white"/>
        </xacro:if>
        
        <xacro:if value="${indy_type == 'icon3' or indy_type == 'icon7l'}">
            <xacro:property name="material_0" value="icon_grey"/>
            <xacro:property name="material_1" value="icon_green"/>
            <xacro:property name="material_2" value="icon_green"/>
            <xacro:property name="material_3" value="icon_green"/>
            <xacro:property name="material_4" value="icon_green"/>
            <xacro:property name="material_5" value="icon_grey"/>
            <xacro:property name="material_6" value="icon_grey"/>
        </xacro:if>

        <!-- links -  main serial chain -->
        <xacro:macro name="define_link" params="link_index link_mesh">
            <link name="${prefix}${link_index}">
                <xacro:property name="config_physical_parameters" value="${xacro.load_yaml(physical_parameters_file)}"/>
                <xacro:property name="sec_inertia_parameters" value="${config_physical_parameters['inertia_parameters']}" />
                <visual>
                    <origin xyz="0 0 0" rpy="0 0 0"/>
                    <geometry>
                        <xacro:get_mesh name="${link_mesh}" type="visual"/>
                    </geometry>

                    <xacro:if value="${link_index == 'link0'}">
                        <material name="${material_0}"/>
                    </xacro:if>
                    <xacro:if value="${link_index == 'link1'}">
                        <material name="${material_1}"/>
                    </xacro:if>
                    <xacro:if value="${link_index == 'link2'}">
                        <material name="${material_2}"/>
                    </xacro:if>
                    <xacro:if value="${link_index == 'link3'}">
                        <material name="${material_3}"/>
                    </xacro:if>
                    <xacro:if value="${link_index == 'link4'}">
                        <material name="${material_4}"/>
                    </xacro:if>
                    <xacro:if value="${link_index == 'link5'}">
                        <material name="${material_5}"/>
                    </xacro:if>
                    <xacro:if value="${link_index == 'link6'}">
                        <material name="${material_6}"/>
                    </xacro:if>
                    <xacro:if value="${link_index == 'link7'}">
                        <material name="${material_7}"/>
                    </xacro:if>

                </visual>
                <collision>
                    <origin xyz="0 0 0" rpy="0 0 0"/>
                    <geometry>
                        <xacro:get_mesh name="${link_mesh}" type="collision"/>
                    </geometry>
                </collision>
                <inertial>
                    <mass value="${sec_inertia_parameters[link_index + '_mass']}"/>
                    <origin
                        xyz="${sec_inertia_parameters['center_of_mass'][link_index]['x']}
                            ${sec_inertia_parameters['center_of_mass'][link_index]['y']}
                            ${sec_inertia_parameters['center_of_mass'][link_index]['z']}" 
                        rpy="0 0 0"/>
                    <inertia
                        ixx="${sec_inertia_parameters[link_index]['ixx']}" 
                        iyy="${sec_inertia_parameters[link_index]['iyy']}" 
                        izz="${sec_inertia_parameters[link_index]['izz']}" 
                        ixy="${sec_inertia_parameters[link_index]['ixy']}" 
                        iyz="${sec_inertia_parameters[link_index]['iyz']}" 
                        ixz="${sec_inertia_parameters[link_index]['ixz']}" />
                </inertial>
            </link>
        </xacro:macro>

        <xacro:define_link link_index="link0" link_mesh="link0"/>
        <xacro:define_link link_index="link1" link_mesh="link1"/>
        <xacro:define_link link_index="link2" link_mesh="link2"/>
        <xacro:define_link link_index="link3" link_mesh="link3"/>
        <xacro:define_link link_index="link4" link_mesh="link4"/>
        <xacro:define_link link_index="link5" link_mesh="link5"/>

        <xacro:if value="${indy_eye and not (indy_type == 'indyrp2' or indy_type == 'indyrp2_v2')}">
            <xacro:define_link link_index="link6" link_mesh="link6_eye"/>
        </xacro:if>
        <xacro:unless value="${indy_eye and not (indy_type == 'indyrp2' or indy_type == 'indyrp2_v2')}">
            <xacro:define_link link_index="link6" link_mesh="link6"/>
        </xacro:unless>

        <xacro:if value="${indy_type == 'indyrp2' or indy_type == 'indyrp2_v2'}">
            <xacro:if value="${indy_eye}">
                <xacro:define_link link_index="link7" link_mesh="link7_eye"/>
            </xacro:if>
            <xacro:unless value="${indy_eye}">
                <xacro:define_link link_index="link7" link_mesh="link7"/>
            </xacro:unless>
        </xacro:if>

        <link name="${prefix}tcp"/>

        <!-- joints -->
        <joint name="global" type="fixed">
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <parent link="${parent}"/> <!--world-->
            <child link="$(arg prefix)link0"/>
        </joint>

        <xacro:macro name="define_joint" params="joint_index link_1_index link_2_index" >
            <xacro:property name="config_joint_limit_parameters" value="${xacro.load_yaml(joint_limits_parameters_file)}"/>
            <xacro:property name="config_kinematics_parameters" value="${xacro.load_yaml(kinematics_parameters_file)}"/>
            <xacro:property name="sec_kinematics" value="${config_kinematics_parameters['kinematics']}" />
            <xacro:property name="sec_limits" value="${config_joint_limit_parameters['joint_limits']}"/>
            <joint name="${prefix}${joint_index}" type="revolute">
                <parent link="${prefix}${link_1_index}"/>
                <child link="${prefix}${link_2_index}"/>
                <origin
                    xyz="${sec_kinematics[joint_index]['x']} 
                        ${sec_kinematics[joint_index]['y']} 
                        ${sec_kinematics[joint_index]['z']}" 
                    rpy="${sec_kinematics[joint_index]['roll']}
                        ${sec_kinematics[joint_index]['pitch']}
                        ${sec_kinematics[joint_index]['yaw']}"/>
                    <axis xyz="0 0 1"/>
                <limit
                    lower="${sec_limits[joint_index]['min_position']}" 
                    upper="${sec_limits[joint_index]['max_position']}"
                    effort="${sec_limits[joint_index]['max_effort']}" 
                    velocity="${sec_limits[joint_index]['max_velocity']}"/>
            </joint>
        </xacro:macro>

        <xacro:define_joint joint_index="joint0" link_1_index="link0" link_2_index="link1"/>
        <xacro:define_joint joint_index="joint1" link_1_index="link1" link_2_index="link2"/>
        <xacro:define_joint joint_index="joint2" link_1_index="link2" link_2_index="link3"/>
        <xacro:define_joint joint_index="joint3" link_1_index="link3" link_2_index="link4"/>
        <xacro:define_joint joint_index="joint4" link_1_index="link4" link_2_index="link5"/>
        <xacro:define_joint joint_index="joint5" link_1_index="link5" link_2_index="link6"/>

        <xacro:if value="${indy_type == 'indyrp2' or indy_type == 'indyrp2_v2'}">
            <xacro:define_joint joint_index="joint6" link_1_index="link6" link_2_index="link7"/>
            <xacro:property name="config_kinematics_parameters" value="${xacro.load_yaml(kinematics_parameters_file)}"/>
            <xacro:property name="sec_kinematics" value="${config_kinematics_parameters['kinematics']}" />
            <joint name="${prefix}tcp" type="fixed">
                <parent link="${prefix}link7"/>
                <child link="${prefix}tcp"/>
                <!-- <origin xyz="0 0 0.06" rpy="0 0 0"/> -->
                <origin
                    xyz="${sec_kinematics['tcp']['x']} 
                        ${sec_kinematics['tcp']['y']} 
                        ${sec_kinematics['tcp']['z']}" 
                    rpy="${sec_kinematics['tcp']['roll']}
                        ${sec_kinematics['tcp']['pitch']}
                        ${sec_kinematics['tcp']['yaw']}"/>
            </joint>
        </xacro:if>

        <xacro:unless value="${indy_type == 'indyrp2' or indy_type == 'indyrp2_v2'}">
            <xacro:property name="config_kinematics_parameters" value="${xacro.load_yaml(kinematics_parameters_file)}"/>
            <xacro:property name="sec_kinematics" value="${config_kinematics_parameters['kinematics']}" />
            <joint name="${prefix}tcp" type="fixed">
                <parent link="${prefix}link6"/>
                <child link="${prefix}tcp"/>
                <!-- <origin xyz="0 0 0.06" rpy="0 0 0"/> -->
                <origin
                    xyz="${sec_kinematics['tcp']['x']} 
                        ${sec_kinematics['tcp']['y']} 
                        ${sec_kinematics['tcp']['z']}" 
                    rpy="${sec_kinematics['tcp']['roll']}
                        ${sec_kinematics['tcp']['pitch']}
                        ${sec_kinematics['tcp']['yaw']}"/>
            </joint>
        </xacro:unless>

        <!-- Add URDF transmission elements (for ros_control) -->
        <xacro:indy_transmission prefix="${prefix}" hw_interface="${transmission_hw_interface}" indy_type="${indy_type}"/>
    </xacro:macro>
</robot>
